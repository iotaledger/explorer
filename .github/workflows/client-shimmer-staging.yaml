name: Shimmer Client Build and Deploy Staging

on:
#  push:
#    branches: [ stardust ]
#    paths:
#      - "api/**"
#      - ".github/workflows/api-staging.yaml"
  # only manual dispatch
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'

concurrency:
  group: client-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # Build specific env vars
      CONFIG_ID: staging
      CONFIG_JSON: ${{ secrets.CLIENT_SHIMMER_STAGING_CONFIG }}
      VERCEL_DOMAIN: ${{ secrets.VERCEL_CLIENT_SHIMMER_STAGING_DOMAIN }}

      # Global Vercel env vars
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_CLIENT_SHIMMER_PROJECT_ID }}
      VERCEL_PROJECT_NAME: ${{ secrets.VERCEL_CLIENT_SHIMMER_PROJECT_NAME }}

    steps:
      - uses: actions/checkout@v2
      - name: Client Config
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require('fs')
            fs.writeFileSync('./client/src/assets/config/config.staging.json', process.env.CONFIG_JSON)
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: npm 7
        run: npm install -g npm@7
      - name: Client Deploy
        run: |
          TS="$( date +%s )"
          npx vercel --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_SCOPE }} --force -m githubCommitSha=${{ github.sha }} -m timestamp=$TS --build-env REACT_APP_CONFIG_ID=$CONFIG_ID
          VERCEL_DEPLOYMENT_URL=$(npx vercel ls --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_SCOPE }} -m githubCommitSha=${{ github.sha }}  -m timestamp=$TS 2>&1 | grep $VERCEL_PROJECT_NAME | awk {'print $2'})
          npx vercel alias --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_SCOPE }} $VERCEL_DEPLOYMENT_URL $VERCEL_DOMAIN